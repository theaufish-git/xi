apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "release.name" . }}
  labels:
    app: {{ include "release.name" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "release.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "release.name" . }}
    spec:
      containers:
      - name: connect
        image: {{ coalesce  .Values.xi.services.connect.repository .Values.xi.services.repository .Values.repository }}:{{ coalesce  .Values.xi.services.connect.revision .Values.xi.services.revision .Values.revision }}
        imagePullPolicy: IfNotPresent
        command:
        - /opt/xi/bin/xi_connect
        env:
        {{- include "container.env.default" . | nindent 8 }}
        ports:
        {{- include "container.ports" .Values.xi.services.connect.ports | nindent 8 }}
        volumeMounts:
        - name: {{ include "release.name" . }}-settings
          mountPath: /opt/xi/settings
      {{- range $i, $port := .Values.xi.services.map.ports }}
      - name: map-{{ $i }}
        image: {{ coalesce  $.Values.xi.services.map.repository $.Values.xi.services.repository $.Values.repository }}:{{ coalesce  $.Values.xi.services.map.revision $.Values.xi.services.revision $.Values.revision }}
        imagePullPolicy: IfNotPresent
        command:
        - /opt/xi/bin/xi_map
        args:
        - --log
        - map-server-{{ $i }}.log
        - --port
        - {{ coalesce $port.targetPort $port.port | toString | quote }}
        env:
        {{- include "container.env.default" $ | nindent 8 }}
        ports:
        {{- include "container.port" $port | nindent 8 }}
        volumeMounts:
        - name: {{ include "release.name" $ }}-losmeshes
          mountPath: /opt/xi/losmeshes
        - name: {{ include "release.name" $ }}-navmeshes
          mountPath: /opt/xi/navmeshes
        - name: {{ include "release.name" $ }}-scripts
          mountPath: /opt/xi/scripts
        - name: {{ include "release.name" $ }}-settings
          mountPath: /opt/xi/settings
      {{- end }}
      - name: search
        image: {{ coalesce .Values.xi.services.search.repository .Values.xi.services.repository .Values.repository }}:{{ coalesce  .Values.xi.services.search.revision .Values.xi.services.revision .Values.revision }}
        imagePullPolicy: IfNotPresent
        command:
        - /opt/xi/bin/xi_search
        env:
        {{- include "container.env.default" . | nindent 8 }}
        ports:
        {{- include "container.ports" .Values.xi.services.search.ports | nindent 8 }}
        volumeMounts:
        - name: {{ include "release.name" . }}-settings
          mountPath: /opt/xi/settings
      - name: world
        image: {{ coalesce  .Values.xi.services.world.repository .Values.xi.services.repository .Values.repository }}:{{ coalesce  .Values.xi.services.world.revision .Values.xi.services.revision .Values.revision }}
        imagePullPolicy: IfNotPresent
        command:
        - /opt/xi/bin/xi_world
        env:
        {{- include "container.env.default" . | nindent 8 }}
        volumeMounts:
        - name: {{ include "release.name" . }}-scripts
          mountPath: /opt/xi/scripts
        - name: {{ include "release.name" . }}-settings
          mountPath: /opt/xi/settings
      initContainers:
      - name: configure
        image: {{ coalesce  .Values.xi.services.configure.repository .Values.xi.services.repository .Values.repository }}:{{ coalesce  .Values.xi.services.configure.revision .Values.xi.services.revision .Values.revision }}-config
        imagePullPolicy: IfNotPresent
        command:
        - sh
        args:
        - -c
        - |
          mkdir -p /opt/xi/settings/default && \
          xi-config -o /opt/xi/settings -p xi && \
          xi-config -o /opt/xi/settings/default -p xi
        env:
        {{- include "container.env.default" . | nindent 8 }}
        {{- include "container.env.secrets" .Values.xi.services.configure.secrets | nindent 8 }}
        envFrom:
        - configMapRef:
            name: {{ include "release.name" . }}
        volumeMounts:
        - name: {{ include "release.name" . }}-settings
          mountPath: /opt/xi/settings
      - name: meshes
        image: {{ coalesce  .Values.xi.services.meshes.repository .Values.xi.services.repository .Values.repository }}:{{ coalesce  .Values.xi.services.meshes.revision .Values.xi.services.revision .Values.revision }}-meshes
        imagePullPolicy: IfNotPresent
        command:
        - bash
        args:
        - -c
        - |
          cp -r /opt/xi/losmeshes/* /opt/xi/server/losmeshes && \
          cp -r /opt/xi/navmeshes/* /opt/xi/server/navmeshes
        env:
        {{- include "container.env.default" . | nindent 8 }}
        volumeMounts:
        - name: {{ include "release.name" . }}-losmeshes
          mountPath: /opt/xi/server/losmeshes
        - name: {{ include "release.name" . }}-navmeshes
          mountPath: /opt/xi/server/navmeshes
      - name: scripts
        image: {{ coalesce  .Values.xi.services.scripts.repository .Values.xi.services.repository .Values.repository }}:{{ coalesce  .Values.xi.services.scripts.revision .Values.xi.services.revision .Values.revision }}-scripts
        imagePullPolicy: IfNotPresent
        command:
        - bash
        args:
        - -c
        - "cp -r /opt/xi/scripts/* /opt/xi/server/scripts;"
        env:
        {{- include "container.env.default" . | nindent 8 }}
        volumeMounts:
        - name: {{ include "release.name" . }}-scripts
          mountPath: /opt/xi/server/scripts
      volumes:
      - name: {{ include "release.name" . }}-losmeshes
        emptyDir: {}
      - name: {{ include "release.name" . }}-navmeshes
        emptyDir: {}
      - name: {{ include "release.name" . }}-scripts
        emptyDir: {}
      - name: {{ include "release.name" . }}-settings
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "release.name.sql" . }}
  labels:
    app: {{ include "release.name.sql" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "release.name.sql" . }}
  template:
    metadata:
      labels:
        app: {{ include "release.name.sql" . }}
    {{- if .Values.sql.enabled }}
    spec:
      containers:
      - name: sql
        image: {{ default .Values.repository .Values.sql.repository }}:{{ default .Values.revision .Values.sql.revision }}-sql
        imagePullPolicy: IfNotPresent
        {{- include "container.security" .sql | nindent 8 }}
        env:
        {{- include "container.env.default" .Values.sql | nindent 8 }}
        {{- include "container.env.secrets" .Values.sql.secrets | nindent 8 }}
        envFrom:
        - configMapRef:
            name: {{ include "release.name" . }}-sql
        ports:
        {{- include "container.ports" .Values.sql.ports | nindent 8 }}
        volumeMounts:
        - name: {{ include "release.name" . }}-settings
          mountPath: /opt/xi/settings
        - name: {{ include "release.name" . }}-sql-backups
          mountPath: /opt/xi/sql/backups
        - name: {{ include "release.name" . }}-sql-storage
          mountPath: /var/lib/mysql
      initContainers:
      - name: configure
        image: {{ coalesce  .Values.xi.services.configure.repository .Values.xi.services.repository .Values.repository }}:{{ coalesce  .Values.xi.services.configure.revision .Values.xi.services.revision .Values.revision }}-config
        imagePullPolicy: IfNotPresent
        command:
        - sh
        args:
        - -c
        - |
          mkdir -p /opt/xi/settings/default && \
          xi-config -o /opt/xi/settings -p xi && \
          xi-config -o /opt/xi/settings/default -p xi
        env:
        {{- include "container.env.default" . | nindent 8 }}
        {{- include "container.env.secrets" .Values.xi.services.configure.secrets | nindent 8 }}
        envFrom:
        - configMapRef:
            name: {{ include "release.name" . }}
        - configMapRef:
            name: {{ include "release.name" . }}-sql
        volumeMounts:
        - name: {{ include "release.name" . }}-settings
          mountPath: /opt/xi/settings
      volumes:
      - name: {{ include "release.name" . }}-settings
        emptyDir: {}
      - name: {{ include "release.name" . }}-sql-backups
        hostPath:
          path: /run/desktop/mnt/host/{{ .Values.sql.dirs.backups }}
          type: DirectoryOrCreate
      - name: {{ include "release.name" . }}-sql-storage
        hostPath:
          path: /run/desktop/mnt/host/{{ .Values.sql.dirs.storage }}
          type: DirectoryOrCreate
    {{- else }}
    spec:
      containers:
      - name: sql
        image: {{ default .Values.repository .Values.sql.repository }}:{{ default .Values.revision .Values.sql.revision }}-sql
        imagePullPolicy: IfNotPresent
        command:
        - bash
        stdin: true
        tty: true
        env:
        {{- include "container.env.default" .Values.sql | nindent 8 }}
        {{- include "container.env.secrets" .Values.sql.secrets | nindent 8 }}
        envFrom:
        - configMapRef:
            name: {{ include "release.name" . }}-sql
        volumeMounts:
        - name: {{ include "release.name" . }}-settings
          mountPath: /opt/xi/settings
      initContainers:
      - name: configure
        image: {{ coalesce  .Values.xi.services.configure.repository .Values.xi.services.repository .Values.repository }}:{{ coalesce  .Values.xi.services.configure.revision .Values.xi.services.revision .Values.revision }}-config
        imagePullPolicy: IfNotPresent
        command:
        - sh
        args:
        - -c
        - |
          mkdir -p /opt/xi/settings/default && \
          xi-config -o /opt/xi/settings -p xi && \
          xi-config -o /opt/xi/settings/default -p xi
        env:
        {{- include "container.env.default" . | nindent 8 }}
        {{- include "container.env.secrets" .Values.xi.services.configure.secrets | nindent 8 }}
        envFrom:
        - configMapRef:
            name: {{ include "release.name" . }}
        - configMapRef:
            name: {{ include "release.name" . }}-sql
        volumeMounts:
        - name: {{ include "release.name" . }}-settings
          mountPath: /opt/xi/settings
      volumes:
      - name: {{ include "release.name" . }}-settings
        emptyDir: {}
    {{- end }}